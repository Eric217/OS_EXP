gcc compliler:
    默认对源文件 预处理、编译以及链接, 最后生成可执行文件, 默认为a.out

-c  预处理、编译(汇编)到目标代码，不进行链接，生成 object file，目标文件(待重定位文件, Mach-O 文件) a.o 
    文件里面所用的符号(函数或变量)还没有安排地址，因为符号一般会位于其他文件中，所以在编译时不能确定其地址。这些符号的地址 需要将来与其他目标文件“组成"一个可执行文件时 重新定位(编排地址)，即链接，生成可执行文件。

-o输出到指定文件，覆盖。

gcc -c -o _ _


ld linker:

-Ttext VSTART	指定起始虚拟地址

-e ENTRY ADDR	指定程序的起始地址，从哪开始执行，入口地址，可以是一个 label、symbol
		当多个文件拼合成一个可执行文件时，程序应该从哪句代码开始执行呢？
		由于程序内的地址是在链接阶段编排（也就是重定位）的，所以在链接阶段要明确入口地址。
		链接器规定，默认把名为 _start 的函数作为程序的入口地址，entry symbol.

ld _ -Ttext 0xc0001500 -e _ -o _
